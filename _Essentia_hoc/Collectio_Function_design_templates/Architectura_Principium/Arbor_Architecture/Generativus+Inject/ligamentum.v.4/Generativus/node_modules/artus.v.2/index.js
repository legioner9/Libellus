'use strict';

const artus = (communis, fn) => {

  communis.closureForFn = communis.anteExitus(communis.closureForFn);

  const exitus = function(...args) {

    const bfn = fn.bind(communis.thisForFn);
    const ostium = {
      bfn: bfn,
      args: args,
      closureForFn: communis.closureForFn,
      thisForFn: communis.thisForFn,
    };

    communis.os.prototype.getOstium = () => ostium;
    communis.internus(exitus, communis, bfn, ...args);
  };

  communis.os.prototype.getCommunis = () => communis;

  for (const key in communis.objProto) {
    if (communis.objProto.hasOwnProperty(key)) communis.os.prototype[key] = communis.objProto[key];
  }

  Object.setPrototypeOf(exitus, communis.os.prototype);

  return exitus;
};

module.exports = {
  artus,
};
