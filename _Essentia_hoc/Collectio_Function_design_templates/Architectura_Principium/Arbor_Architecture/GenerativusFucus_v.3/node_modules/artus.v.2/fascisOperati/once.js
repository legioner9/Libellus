'use strict';

const { generativusFucus } = require('artus.v.2');

const propObj = {
  preComutClosure: (closureForFn) => closureForFn,
  comutClosure: (closureForFn) => closureForFn,
  closureToMoresFn: (bfn, closureForFn) => (closureForFn, bfn),
  returnBfn: (bfn, closureForFn) => (closureForFn, bfn),
  methods: {},
  closureForFn: {
    context: {
      max: 0,
      counter: 0,
    },
    time: { msec: 0, },
    timer: {
      timeout: null,
      interval: null,
    },
    flags: {
      kill: false,
    }
  },
  thisForFn: {},
};

propObj.returnBfn = (bfn, closureForFn) => {
  if (!closureForFn.flags.kill) {
    closureForFn.flags.kill = true;
    return bfn;
  } else return () => undefined;
};

// const fn = function(...args) {
//   console.dir({ args, this: this });
// };

// Use
// debugger
const once = generativusFucus.bind(null, propObj);
// fucus('a');// call
// fucus('b');// return undefined
//
//
// debugger

module.exports = { once };
